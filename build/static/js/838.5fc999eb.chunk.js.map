{"version":3,"file":"static/js/838.5fc999eb.chunk.js","mappings":"+KAiDA,MAwFA,EAxF2BA,KACvB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAiB,IA0C3C,OAxCAK,EAAAA,EAAAA,YAAU,KAONC,MAFY,oKAGPC,MAAMC,IACH,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,uBAAuBF,EAAIG,UAE/C,OAAOH,EAAII,MAAM,IAEpBL,MAAMM,IAAyB,IAADC,EAAAC,EAC3B,MAAMC,EAAsB,QAAhBF,EAAGD,EAAKI,gBAAQ,IAAAH,GAAO,QAAPC,EAAbD,EAAeI,aAAK,IAAAH,OAAP,EAAbA,EAAsBI,QAAO,CAACC,EAAgCC,KAAW,IAADC,EAAAC,EAEnF,OADAH,EAAIC,EAAMG,IAAIC,KAAkB,QAAZH,EAAAD,EAAMK,cAAM,IAAAJ,GAAM,QAANC,EAAZD,EAAcK,YAAI,IAAAJ,OAAN,EAAZA,EAAoBK,MAAO,GACxCR,CAAG,GACX,CAAC,GAEEtB,EAAQe,EAAKgB,MACdC,QAAOC,IAAI,IAAAC,EAAA,OAAIhB,IAA2B,QAArBgB,EAAID,EAAKL,OAAOO,aAAK,IAAAD,OAAA,EAAjBA,EAAmBR,IAAIC,KAAMT,EAAOe,EAAKL,OAAOO,MAAMT,IAAIC,GAAG,IACtFS,KAAKH,IAAI,CACNN,GAAIM,EAAKP,IAAIC,GACbU,SAAUJ,EAAKL,OAAOS,SACtBC,OAAQL,EAAKL,OAAOU,OACpBC,KAAMN,EAAKL,OAAOW,KAClBC,YAAaP,EAAKL,OAAOY,YACzBC,SAAUvB,EAASA,EAAOe,EAAKL,OAAOO,MAAMT,IAAIC,IAAM,OAG9D1B,EAASD,GACTI,GAAa,EAAM,IAEtBsC,OAAOC,IACJrC,EAASqC,EAAIC,SACbxC,GAAa,EAAM,GACrB,GACP,IAECD,GACO0C,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGZzC,GACO0C,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,UAAQzC,MAIpB0C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCF,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,sEAAqEF,SAAC,UAGpFD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uDAAsDF,SAChE9C,EAAMoC,KAAKa,IACRF,EAAAA,EAAAA,MAAA,OAAmBC,UAAU,sDAAqDF,SAAA,EAC9ED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8BAA6BF,UACxCD,EAAAA,EAAAA,KAAA,OACIG,UAAU,6BACVE,IAAKD,EAAKR,SACVU,IAAKF,EAAKZ,cAGlBU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcF,SAAA,EACzBD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CF,UACrDD,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAI,SAASJ,EAAKtB,KAAMqB,UAAU,kBAAiBF,SAAEG,EAAKZ,cAEpEQ,EAAAA,EAAAA,KAAA,KAAGG,UAAU,qBAAoBF,SAAE,IAAIQ,KAAKL,EAAKV,MAAMgB,wBACvDV,EAAAA,EAAAA,KAAA,KAAGG,UAAU,qBAAoBF,SAAEG,EAAKT,eACxCK,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACDC,GAAI,SAASJ,EAAKtB,KAClBqB,UAAU,wEAAuEF,SACpF,0BAjBCG,EAAKtB,UAwBrB,C","sources":["MainPages/blogs/BlogList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Asset {\n    sys: {\n        id: string;\n    };\n    fields: {\n        file: {\n            url: string;\n        };\n    };\n}\n\ninterface PostFields {\n    headline: string;\n    author: string;\n    date: string;\n    description: string;\n    image: {\n        sys: {\n            id: string;\n        };\n    };\n}\n\ninterface ContentfulPost {\n    sys: {\n        id: string;\n    };\n    fields: PostFields;\n}\n\ninterface FetchResponse {\n    items: ContentfulPost[];\n    includes?: {\n        Asset?: Asset[];\n    };\n}\n\ninterface Post {\n    id: string;\n    headline: string;\n    author: string;\n    date: string;\n    description: string;\n    imageUrl: string;\n}\n\nconst BlogList: React.FC = () => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        const accessToken = 'QG1NAgWPrQw6ReAr3oeLzAhh3NsHxVdS0-6Fv8oF2e4';\n        const spaceId = '18q0bnjllo71';\n        const environmentId = 'master';\n        const contentTypeId = 'blog';\n        const url = `https://cdn.contentful.com/spaces/${spaceId}/environments/${environmentId}/entries?access_token=${accessToken}&content_type=${contentTypeId}&include=10`;\n\n        fetch(url)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error(`HTTP error! Status: ${res.status}`);\n                }\n                return res.json();\n            })\n            .then((data: FetchResponse) => {\n                const assets = data.includes?.Asset?.reduce((acc: { [key: string]: string }, asset) => {\n                    acc[asset.sys.id] = asset.fields?.file?.url || '';\n                    return acc;\n                }, {});\n\n                const posts = data.items\n                    .filter(item => assets && item.fields.image?.sys.id && assets[item.fields.image.sys.id])\n                    .map((item) => ({\n                        id: item.sys.id,\n                        headline: item.fields.headline,\n                        author: item.fields.author,\n                        date: item.fields.date,\n                        description: item.fields.description,\n                        imageUrl: assets ? assets[item.fields.image.sys.id] : '',\n                    }));\n\n                setPosts(posts);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                setError(err.message);\n                setIsLoading(false);\n            });\n    }, []);\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div className=\"max-w-6xl mx-auto pt-40 px-4 py-8\">\n            <h1 className=\"text-4xl font-bold text-center mb-12 text-brandBlue dark:text-white\">\n                Blog\n            </h1>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {posts.map((post) => (\n                    <div key={post.id} className=\"border-2 border-brandBlue overflow-hidden shadow-lg\">\n                        <div className=\"w-full h-48 overflow-hidden\">\n                            <img\n                                className=\"w-full h-full object-cover\"\n                                src={post.imageUrl}\n                                alt={post.headline}\n                            />\n                        </div>\n                        <div className=\"p-4 bg-white\">\n                            <h2 className=\"text-xl font-semibold mb-2 text-brandBlue\">\n                                <Link to={`/blog/${post.id}`} className=\"hover:underline\">{post.headline}</Link>\n                            </h2>\n                            <p className=\"text-gray-600 mb-2\">{new Date(post.date).toLocaleDateString()}</p>\n                            <p className=\"text-gray-700 mb-4\">{post.description}</p>\n                            <Link\n                                to={`/blog/${post.id}`}\n                                className=\"text-brandOrange font-semibold hover:text-brandBlue transition-colors\"\n                            >\n                                Read more â†’\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default BlogList;\n"],"names":["BlogList","posts","setPosts","useState","isLoading","setIsLoading","error","setError","useEffect","fetch","then","res","ok","Error","status","json","data","_data$includes","_data$includes$Asset","assets","includes","Asset","reduce","acc","asset","_asset$fields","_asset$fields$file","sys","id","fields","file","url","items","filter","item","_item$fields$image","image","map","headline","author","date","description","imageUrl","catch","err","message","_jsx","children","_jsxs","className","post","src","alt","Link","to","Date","toLocaleDateString"],"sourceRoot":""}