{"version":3,"file":"static/js/823.8ef73697.chunk.js","mappings":"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","sources":["CustomComponents/KitchenBathroomHeader.tsx","CustomComponents/PricingTable.tsx","Data/kitchenBathroomData.tsx","PageComponents/KitchenBathroomComponent/Head.tsx","../node_modules/@heroicons/react/20/solid/esm/CheckIcon.js","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\ninterface KitchenBathroomHeaderProps {\n  images: string[];\n  title: string;\n  subtitle: string;\n  height?: string;\n}\n\nconst KitchenBathroomHeader: React.FC<KitchenBathroomHeaderProps> = ({\n  images,\n  title,\n  subtitle,\n  height = '60vh',\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\n      setInitialLoad(false); // Disable the initial load flag after the first interval\n    }, 4000); // Change every 4 seconds\n\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n\n  const { ref: headerRef, inView: headerInView } = useInView({ triggerOnce: true });\n  const { ref: subtitleRef, inView: subtitleInView } = useInView({ triggerOnce: true });\n\n  useEffect(() => {\n    // Preload the LCP image\n    const linkWebP = document.createElement('link');\n    linkWebP.rel = 'preload';\n    linkWebP.href = images[0];\n    linkWebP.as = 'image';\n    linkWebP.type = 'image/webp';\n    document.head.appendChild(linkWebP);\n\n    return () => {\n      document.head.removeChild(linkWebP);\n    };\n  }, [images]);\n\n  return (\n    <div className=\"relative isolate overflow-hidden\" style={{ height }}>\n      <div className=\"absolute inset-0 -z-10 w-full h-full\">\n        {images.map((image, index) => (\n          <picture key={index} className=\"absolute inset-0 w-full h-full\">\n            <source srcSet={image} type=\"image/webp\" />\n            <img\n              src={image}\n              alt={`Slide ${index + 1}`}\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',\n                opacity: index === currentImageIndex ? 1 : 0,\n                transition: 'opacity 2s ease-in-out, transform 4s ease-in-out',\n                transform: index === currentImageIndex || (index === 0 && initialLoad) ? 'scale(1.1)' : 'scale(1)',\n              }}\n              className=\"absolute inset-0 w-full h-full\"\n              loading={index === 0 ? 'eager' : 'lazy'} // Load the first image eagerly\n            />\n          </picture>\n        ))}\n        <div className=\"absolute inset-0 bg-black opacity-30\"></div>\n      </div>\n\n      <div className=\"w-full px-4 lg:px-6 max-w-screen-xl mx-auto flex flex-col items-center justify-center h-full text-center\">\n        <h1\n          ref={headerRef}\n          className={`text-4xl font-bold text-white ${\n            headerInView ? 'animate-slideInRight' : 'opacity-0'\n          }`}\n          style={{\n            textShadow: '2px 2px 4px rgba(0, 0, 0, 1)', // Adjust the shadow to your preference\n            lineHeight: '1.5', // Set the line height to 1.5 times the font size\n          }}\n        >\n          {title}\n        </h1>\n        <p\n          ref={subtitleRef}\n          className={`mt-4 text-xl text-white ${\n            subtitleInView ? 'animate-slideInLeft' : 'opacity-0'\n          }`}\n          style={{\n            textShadow: '2px 2px 4px rgba(0, 0, 0, 1)', // Adjust the shadow to your preference\n            lineHeight: '1.5', // Set the line height to 1.5 times the font size\n          }}\n        >\n          {subtitle}\n        </p>\n      </div>\n\n      <style>\n        {`\n          @keyframes slideInRight {\n            0% {\n              transform: translateX(100%);\n              opacity: 0;\n            }\n            100% {\n              transform: translateX(0);\n              opacity: 1;\n            }\n          }\n\n          @keyframes slideInLeft {\n            0% {\n              transform: translateX(-100%);\n              opacity: 0;\n            }\n            100% {\n              transform: translateX(0);\n              opacity: 1;\n            }\n          }\n\n          .animate-slideInRight {\n            animation: slideInRight 2s ease-in-out forwards;\n          }\n\n          .animate-slideInLeft {\n            animation: slideInLeft 2s ease-in-out forwards;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default KitchenBathroomHeader;\n","import { CheckIcon } from '@heroicons/react/20/solid';\n\nfunction classNames(...classes:any) {\n  return classes.filter(Boolean).join(' ');\n}\n\ninterface PricingTier {\n  name: string;\n  id: string;\n  href: string;\n  priceMonthly: string;\n  description: string;\n  features: string[];\n  mostPopular: boolean;\n}\n\ninterface PricingComponentProps {\n  title: string;\n  subtitle: string;\n  tiers: PricingTier[];\n  extraInfo?: string;\n}\n\nconst PricingComponent: React.FC<PricingComponentProps> = ({ title, subtitle, tiers, extraInfo }) => {\n  return (\n    <div className=\"bg-gray-100 py-24 sm:py-32\">\n      <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\n        <div className=\"mx-auto max-w-4xl text-center\">\n          <h2 className=\"text-base font-semibold leading-7 text-indigo-600\">{title}</h2>\n          <p className=\"mt-2 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl\">\n            {subtitle}\n          </p>\n        </div>\n        {extraInfo && (\n          <p className=\"mx-auto mt-6 max-w-2xl text-center text-lg leading-8 text-gray-600\">\n            {extraInfo}\n          </p>\n        )}\n        <div className=\"isolate mx-auto mt-16 grid max-w-md grid-cols-1 gap-y-8 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3\">\n          {tiers.map((tier, tierIdx) => (\n            <div\n              key={tier.id}\n              className={classNames(\n                tier.mostPopular ? 'lg:z-10 lg:rounded-b-none' : 'lg:mt-8',\n                tierIdx === 0 ? 'lg:rounded-r-none' : '',\n                tierIdx === tiers.length - 1 ? 'lg:rounded-l-none' : '',\n                'flex flex-col justify-between rounded-3xl bg-white p-8 ring-1 ring-gray-200 xl:p-10',\n              )}\n            >\n              <div>\n                <div className=\"flex items-center justify-between gap-x-4\">\n                  <h3\n                    id={tier.id}\n                    className={classNames(\n                      tier.mostPopular ? 'text-indigo-600' : 'text-gray-900',\n                      'text-lg font-semibold leading-8',\n                    )}\n                  >\n                    {tier.name}\n                  </h3>\n                  {tier.mostPopular ? (\n                    <p className=\"rounded-full bg-indigo-600/10 px-2.5 py-1 text-xs font-semibold leading-5 text-indigo-600\">\n                      Most popular\n                    </p>\n                  ) : null}\n                </div>\n                <p className=\"mt-4 text-sm leading-6 text-gray-600\">{tier.description}</p>\n                <p className=\"mt-6 flex items-baseline gap-x-1\">\n                  <span className=\"text-3xl font-bold tracking-tight text-gray-900\">{tier.priceMonthly}</span>\n                </p>\n                <ul className=\"mt-8 space-y-3 text-sm leading-6 text-gray-600\">\n                  {tier.features.map((feature) => (\n                    <li key={feature} className=\"flex gap-x-3\">\n                      <CheckIcon aria-hidden=\"true\" className=\"h-6 w-5 flex-none text-indigo-600\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PricingComponent;\n","export const kitchenData = {\n    heading: 'Beautiful Kitchens',\n    images: [\n      '/images/Home/-IhIoytA.jpeg',\n  '/images/Home/-sIirgvA.jpeg',\n  '/images/Home/2B_MeqLQ.jpeg',\n  '/images/Home/2mWOU1zw.jpeg',\n  '/images/Home/4LDwtCyA.jpeg',\n  '/images/Home/4wt1U8Kw.jpeg',\n  '/images/Home/9A1d_2wg.jpeg',\n    ],\n    paragraphs: [\n      'At Sampson N Co, we take immense pride in the work we do because it defines who we are. Based in Norwich, Norfolk, our company has been providing top-notch kitchen design, supply, and installation services for years. Our commitment to customer satisfaction and quality craftsmanship sets us apart in the industry.',\n      'Sampson N Co was founded with a vision to transform ordinary spaces into extraordinary ones. Our team brings a wealth of knowledge and experience in kitchen design. Over the years, we have built a reputation for reliability, professionalism, and exceptional service. We use high-quality materials and innovative designs to ensure your kitchen is both functional and beautiful.',\n      'We help homeowners and businesses create their dream kitchens with our comprehensive services, including design consultation, material supply, and professional installation. Our team works closely with you to ensure every detail is perfect, from initial concept to final completion.',\n    ],\n  };\n  \n  export const bathroomData = {\n    heading: 'Luxurious Bathrooms',\n    images: [\n        '/images/Home/linton_baths_rs_v1_ls.jpg',\n        '/images/Home/n9FTTB4w.jpeg',\n        '/images/Home/nbb001_baths_v2_ls.jpg',\n        '/images/Home/nbb002_baths_v2_ls.jpg',\n        '/images/Home/nbb003_baths_cameo_v1_ls.jpg',\n        '/images/Home/nbb003_baths_v1_ls.jpg',\n        '/images/Home/nssq_baths_v3_ls1.jpg',\n        '/images/Home/singleended_baths_rs_v1_ls.jpg',\n        '/images/Home/TVYR5PDQ.jpeg',\n        '/images/Home/Wm2AAIgw.jpeg'\n    ],\n    paragraphs: [\n      'At Sampson N Co, we take immense pride in the work we do because it defines who we are. Based in Norwich, Norfolk, our company has been providing top-notch bathroom design, supply, and installation services for years. Our commitment to customer satisfaction and quality craftsmanship sets us apart in the industry.',\n      'Sampson N Co was founded with a vision to transform ordinary spaces into extraordinary ones. Our team brings a wealth of knowledge and experience in bathroom design. Over the years, we have built a reputation for reliability, professionalism, and exceptional service. We use high-quality materials and innovative designs to ensure your bathroom is both functional and beautiful.',\n      'We help homeowners and businesses create their dream bathrooms with our comprehensive services, including design consultation, material supply, and professional installation. Our team works closely with you to ensure every detail is perfect, from initial concept to final completion.',\n    ],\n  };\n  \n  export const kitchenTiers = [\n    {\n      name: 'Small Kitchens',\n      id: 'tier-small-kitchens',\n      href: '#',\n      priceMonthly: '£5,000 - £10,000',\n      description: 'Ideal for apartments and small homes.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: false,\n    },\n    {\n      name: 'Medium Kitchens',\n      id: 'tier-medium-kitchens',\n      href: '#',\n      priceMonthly: '£10,000 - £15,000',\n      description: 'Perfect for standard family homes.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: true,\n    },\n    {\n      name: 'Large Kitchens',\n      id: 'tier-large-kitchens',\n      href: '#',\n      priceMonthly: '£15,000 - £25,000',\n      description: 'Best for large homes and open spaces.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: false,\n    },\n  ];\n  \n  export const bathroomTiers = [\n    {\n      name: 'Small Bathrooms',\n      id: 'tier-small-bathrooms',\n      href: '#',\n      priceMonthly: '£2,000 - £5,000',\n      description: 'Great for small spaces and ensuites.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: false,\n    },\n    {\n      name: 'Medium Bathrooms',\n      id: 'tier-medium-bathrooms',\n      href: '#',\n      priceMonthly: '£5,000 - £8,000',\n      description: 'Ideal for standard family bathrooms.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: true,\n    },\n    {\n      name: 'Large Bathrooms',\n      id: 'tier-large-bathrooms',\n      href: '#',\n      priceMonthly: '£8,000 - £12,000',\n      description: 'Perfect for spacious master bathrooms.',\n      features: ['Design consultation', 'Material supply', 'Installation service', 'Post-installation support'],\n      mostPopular: false,\n    },\n  ];\n  ","import React, { useRef, useState, useEffect } from 'react';\n\ninterface HeadProps {\n  heading: string;\n  images: string[];\n  paragraphs: string[];\n}\n\nconst Head: React.FC<HeadProps> = ({ heading, images, paragraphs }) => {\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, 4000); // Change every 4 seconds\n\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n\n  return (\n    <div className=\"bg-gray-900 py-12\">\n      <div ref={sectionRef} className=\"mx-auto max-w-7xl px-6 lg:px-8\">\n        <div className=\"mx-auto grid max-w-2xl grid-cols-1 items-start gap-x-8 gap-y-16 sm:gap-y-24 lg:mx-0 lg:max-w-none lg:grid-cols-2\">\n          <div>\n            <div className=\"text-base leading-7 text-white lg:max-w-lg\">\n              <h1 className=\"mt-2 text-3xl font-bold tracking-tight text-white sm:text-4xl\">\n                {heading}\n              </h1>\n              <div className=\"max-w-xl\">\n                {paragraphs.map((paragraph, index) => (\n                  <p key={index} className=\"mt-4\">\n                    {paragraph}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"relative overflow-hidden lg:h-full lg:pl-4 lg:sticky lg:top-24 lg:flex lg:items-stretch\">\n            {images.map((image, index) => (\n              <img\n                key={index}\n                className={`absolute inset-0 w-full h-full object-cover transition-opacity duration-1000 ${\n                  index === currentImageIndex ? 'opacity-100' : 'opacity-0'\n                }`}\n                src={image}\n                alt={`Slide ${index + 1}`}\n                loading={index === 0 ? 'eager' : 'lazy'} // Load the first image eagerly\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Head;\n","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16.704 4.153a.75.75 0 0 1 .143 1.052l-8 10.5a.75.75 0 0 1-1.127.075l-4.5-4.5a.75.75 0 0 1 1.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 0 1 1.05-.143Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","images","title","subtitle","height","currentImageIndex","setCurrentImageIndex","useState","initialLoad","setInitialLoad","useEffect","intervalId","setInterval","prevIndex","length","clearInterval","ref","headerRef","inView","headerInView","useInView","triggerOnce","subtitleRef","subtitleInView","linkWebP","document","createElement","rel","href","as","type","head","appendChild","removeChild","_jsxs","className","style","children","map","image","index","_jsx","srcSet","src","alt","width","objectFit","opacity","transition","transform","loading","textShadow","lineHeight","classNames","_len","arguments","classes","Array","_key","filter","Boolean","join","tiers","extraInfo","tier","tierIdx","mostPopular","id","name","description","priceMonthly","features","feature","CheckIcon","kitchenData","heading","paragraphs","bathroomData","kitchenTiers","bathroomTiers","sectionRef","useRef","paragraph","svgRef","titleId","props","React","Object","assign","xmlns","viewBox","fill","fillRule","d","clipRule","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","keys","sort","key","root","has","set","toString","get","observe","element","callback","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","delay","rootMargin","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}