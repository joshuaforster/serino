{"version":3,"file":"static/js/374.653d736e.chunk.js","mappings":"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","sources":["../node_modules/@contentful/rich-text-types/dist/blocks.js","../node_modules/@contentful/rich-text-types/dist/inlines.js","../node_modules/@contentful/rich-text-types/dist/marks.js","../node_modules/@contentful/rich-text-types/dist/schemaConstraints.js","../node_modules/@contentful/rich-text-types/dist/types.js","../node_modules/@contentful/rich-text-types/dist/nodeTypes.js","../node_modules/@contentful/rich-text-types/dist/emptyDocument.js","../node_modules/@contentful/rich-text-types/dist/helpers.js","../node_modules/@contentful/rich-text-react-renderer/src/util/nodeListToReactComponents.tsx","../node_modules/@contentful/rich-text-react-renderer/src/util/appendKeyToValidElement.ts","../node_modules/@contentful/rich-text-types/dist/schemas/index.js","../node_modules/@contentful/rich-text-types/dist/index.js","../node_modules/@contentful/rich-text-react-renderer/src/index.tsx","../node_modules/@contentful/rich-text-types/src/blocks.ts","../node_modules/@contentful/rich-text-types/src/emptyDocument.ts","../node_modules/@contentful/rich-text-types/src/helpers.ts","../node_modules/@contentful/rich-text-types/src/index.ts","../node_modules/@contentful/rich-text-types/src/inlines.ts","../node_modules/@contentful/rich-text-types/src/marks.ts","../node_modules/@contentful/rich-text-types/src/schemaConstraints.ts","../node_modules/@contentful/rich-text-types/src/schemas/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BLOCKS = void 0;\n/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nvar BLOCKS;\n(function (BLOCKS) {\n    BLOCKS[\"DOCUMENT\"] = \"document\";\n    BLOCKS[\"PARAGRAPH\"] = \"paragraph\";\n    BLOCKS[\"HEADING_1\"] = \"heading-1\";\n    BLOCKS[\"HEADING_2\"] = \"heading-2\";\n    BLOCKS[\"HEADING_3\"] = \"heading-3\";\n    BLOCKS[\"HEADING_4\"] = \"heading-4\";\n    BLOCKS[\"HEADING_5\"] = \"heading-5\";\n    BLOCKS[\"HEADING_6\"] = \"heading-6\";\n    BLOCKS[\"OL_LIST\"] = \"ordered-list\";\n    BLOCKS[\"UL_LIST\"] = \"unordered-list\";\n    BLOCKS[\"LIST_ITEM\"] = \"list-item\";\n    BLOCKS[\"HR\"] = \"hr\";\n    BLOCKS[\"QUOTE\"] = \"blockquote\";\n    BLOCKS[\"EMBEDDED_ENTRY\"] = \"embedded-entry-block\";\n    BLOCKS[\"EMBEDDED_ASSET\"] = \"embedded-asset-block\";\n    BLOCKS[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-block\";\n    BLOCKS[\"TABLE\"] = \"table\";\n    BLOCKS[\"TABLE_ROW\"] = \"table-row\";\n    BLOCKS[\"TABLE_CELL\"] = \"table-cell\";\n    BLOCKS[\"TABLE_HEADER_CELL\"] = \"table-header-cell\";\n})(BLOCKS || (exports.BLOCKS = BLOCKS = {}));\n//# sourceMappingURL=blocks.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INLINES = void 0;\n/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n *\n * @note This should be kept in alphabetical order since the\n * [validation package](https://github.com/contentful/content-stack/tree/master/packages/validation)\n *  relies on the values being in a predictable order.\n */\nvar INLINES;\n(function (INLINES) {\n    INLINES[\"ASSET_HYPERLINK\"] = \"asset-hyperlink\";\n    INLINES[\"EMBEDDED_ENTRY\"] = \"embedded-entry-inline\";\n    INLINES[\"EMBEDDED_RESOURCE\"] = \"embedded-resource-inline\";\n    INLINES[\"ENTRY_HYPERLINK\"] = \"entry-hyperlink\";\n    INLINES[\"HYPERLINK\"] = \"hyperlink\";\n    INLINES[\"RESOURCE_HYPERLINK\"] = \"resource-hyperlink\";\n})(INLINES || (exports.INLINES = INLINES = {}));\n//# sourceMappingURL=inlines.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKS = void 0;\n/**\n * Map of all Contentful marks.\n */\nvar MARKS;\n(function (MARKS) {\n    MARKS[\"BOLD\"] = \"bold\";\n    MARKS[\"ITALIC\"] = \"italic\";\n    MARKS[\"UNDERLINE\"] = \"underline\";\n    MARKS[\"CODE\"] = \"code\";\n    MARKS[\"SUPERSCRIPT\"] = \"superscript\";\n    MARKS[\"SUBSCRIPT\"] = \"subscript\";\n    MARKS[\"STRIKETHROUGH\"] = \"strikethrough\";\n})(MARKS || (exports.MARKS = MARKS = {}));\n//# sourceMappingURL=marks.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.V1_MARKS = exports.V1_NODE_TYPES = exports.TEXT_CONTAINERS = exports.HEADINGS = exports.CONTAINERS = exports.VOID_BLOCKS = exports.TABLE_BLOCKS = exports.LIST_ITEM_BLOCKS = exports.TOP_LEVEL_BLOCKS = void 0;\nvar blocks_1 = require(\"./blocks\");\nvar inlines_1 = require(\"./inlines\");\nvar marks_1 = require(\"./marks\");\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexports.TOP_LEVEL_BLOCKS = [\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n    blocks_1.BLOCKS.TABLE,\n];\n/**\n * Array of all allowed block types inside list items\n */\nexports.LIST_ITEM_BLOCKS = [\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n];\nexports.TABLE_BLOCKS = [\n    blocks_1.BLOCKS.TABLE,\n    blocks_1.BLOCKS.TABLE_ROW,\n    blocks_1.BLOCKS.TABLE_CELL,\n    blocks_1.BLOCKS.TABLE_HEADER_CELL,\n];\n/**\n * Array of all void block types\n */\nexports.VOID_BLOCKS = [\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    blocks_1.BLOCKS.EMBEDDED_RESOURCE,\n];\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexports.CONTAINERS = (_a = {},\n    _a[blocks_1.BLOCKS.OL_LIST] = [blocks_1.BLOCKS.LIST_ITEM],\n    _a[blocks_1.BLOCKS.UL_LIST] = [blocks_1.BLOCKS.LIST_ITEM],\n    _a[blocks_1.BLOCKS.LIST_ITEM] = exports.LIST_ITEM_BLOCKS,\n    _a[blocks_1.BLOCKS.QUOTE] = [blocks_1.BLOCKS.PARAGRAPH],\n    _a[blocks_1.BLOCKS.TABLE] = [blocks_1.BLOCKS.TABLE_ROW],\n    _a[blocks_1.BLOCKS.TABLE_ROW] = [blocks_1.BLOCKS.TABLE_CELL, blocks_1.BLOCKS.TABLE_HEADER_CELL],\n    _a[blocks_1.BLOCKS.TABLE_CELL] = [blocks_1.BLOCKS.PARAGRAPH, blocks_1.BLOCKS.UL_LIST, blocks_1.BLOCKS.OL_LIST],\n    _a[blocks_1.BLOCKS.TABLE_HEADER_CELL] = [blocks_1.BLOCKS.PARAGRAPH],\n    _a);\n/**\n * Array of all heading levels\n */\nexports.HEADINGS = [\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n];\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexports.TEXT_CONTAINERS = __spreadArray([blocks_1.BLOCKS.PARAGRAPH], exports.HEADINGS, true);\n/**\n * Node types before `tables` release.\n */\nexports.V1_NODE_TYPES = [\n    blocks_1.BLOCKS.DOCUMENT,\n    blocks_1.BLOCKS.PARAGRAPH,\n    blocks_1.BLOCKS.HEADING_1,\n    blocks_1.BLOCKS.HEADING_2,\n    blocks_1.BLOCKS.HEADING_3,\n    blocks_1.BLOCKS.HEADING_4,\n    blocks_1.BLOCKS.HEADING_5,\n    blocks_1.BLOCKS.HEADING_6,\n    blocks_1.BLOCKS.OL_LIST,\n    blocks_1.BLOCKS.UL_LIST,\n    blocks_1.BLOCKS.LIST_ITEM,\n    blocks_1.BLOCKS.HR,\n    blocks_1.BLOCKS.QUOTE,\n    blocks_1.BLOCKS.EMBEDDED_ENTRY,\n    blocks_1.BLOCKS.EMBEDDED_ASSET,\n    inlines_1.INLINES.HYPERLINK,\n    inlines_1.INLINES.ENTRY_HYPERLINK,\n    inlines_1.INLINES.ASSET_HYPERLINK,\n    inlines_1.INLINES.EMBEDDED_ENTRY,\n    'text',\n];\n/**\n * Marks before `superscript` & `subscript` release.\n */\nexports.V1_MARKS = [marks_1.MARKS.BOLD, marks_1.MARKS.CODE, marks_1.MARKS.ITALIC, marks_1.MARKS.UNDERLINE];\n//# sourceMappingURL=schemaConstraints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=nodeTypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EMPTY_DOCUMENT = void 0;\nvar blocks_1 = require(\"./blocks\");\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nexports.EMPTY_DOCUMENT = {\n    nodeType: blocks_1.BLOCKS.DOCUMENT,\n    data: {},\n    content: [\n        {\n            nodeType: blocks_1.BLOCKS.PARAGRAPH,\n            data: {},\n            content: [\n                {\n                    nodeType: 'text',\n                    value: '',\n                    marks: [],\n                    data: {},\n                },\n            ],\n        },\n    ],\n};\n//# sourceMappingURL=emptyDocument.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isInline = isInline;\nexports.isBlock = isBlock;\nexports.isText = isText;\nvar blocks_1 = require(\"./blocks\");\nvar inlines_1 = require(\"./inlines\");\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj, value) {\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (value === obj[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the node is an instance of Inline.\n */\nfunction isInline(node) {\n    return hasValue(inlines_1.INLINES, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Block.\n */\nfunction isBlock(node) {\n    return hasValue(blocks_1.BLOCKS, node.nodeType);\n}\n/**\n * Checks if the node is an instance of Text.\n */\nfunction isText(node) {\n    return node.nodeType === 'text';\n}\n//# sourceMappingURL=helpers.js.map","import React, { ReactNode } from 'react';\n\nimport { helpers, Mark } from '@contentful/rich-text-types';\n\nimport { CommonNode, Options } from '..';\n\nimport { appendKeyToValidElement } from './appendKeyToValidElement';\n\nexport function nodeListToReactComponents(nodes: CommonNode[], options: Options): ReactNode {\n  return nodes.map((node: CommonNode, index: number): ReactNode => {\n    return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n  });\n}\n\nexport function nodeToReactComponent(node: CommonNode, options: Options): ReactNode {\n  const { renderNode, renderMark, renderText, preserveWhitespace } = options;\n\n  if (helpers.isText(node)) {\n    let nodeValue: ReactNode = renderText ? renderText(node.value) : node.value;\n\n    // Preserving whitespace is only supported with the default transformations.\n    if (preserveWhitespace && !renderText) {\n      // Preserve multiple spaces.\n      nodeValue = (nodeValue as string).replace(/ {2,}/g, (match) => '\\u00A0'.repeat(match.length));\n\n      // Preserve line breaks.\n      const lines = (nodeValue as string).split('\\n');\n      const jsxLines: (string | JSX.Element)[] = [];\n\n      lines.forEach((line, index) => {\n        jsxLines.push(line);\n        if (index !== lines.length - 1) {\n          jsxLines.push(<br />);\n        }\n      });\n      nodeValue = jsxLines;\n    }\n\n    return node.marks.reduce((value: ReactNode, mark: Mark): ReactNode => {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, nodeValue);\n  } else {\n    const children: ReactNode = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return <>{children}</>;\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\n","import { cloneElement, isValidElement, ReactNode } from 'react';\n\nexport function appendKeyToValidElement(element: ReactNode, key: number): ReactNode {\n  if (isValidElement(element) && element.key === null) {\n    return cloneElement(element, { key });\n  }\n  return element;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaWithNodeType = getSchemaWithNodeType;\nfunction getSchemaWithNodeType(nodeType) {\n    try {\n        return require(\"./generated/\".concat(nodeType, \".json\"));\n    }\n    catch (error) {\n        throw new Error(\"Schema for nodeType \\\"\".concat(nodeType, \"\\\" was not found.\"));\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaWithNodeType = exports.helpers = exports.EMPTY_DOCUMENT = exports.MARKS = exports.INLINES = exports.BLOCKS = void 0;\nvar blocks_1 = require(\"./blocks\");\nObject.defineProperty(exports, \"BLOCKS\", { enumerable: true, get: function () { return blocks_1.BLOCKS; } });\nvar inlines_1 = require(\"./inlines\");\nObject.defineProperty(exports, \"INLINES\", { enumerable: true, get: function () { return inlines_1.INLINES; } });\nvar marks_1 = require(\"./marks\");\nObject.defineProperty(exports, \"MARKS\", { enumerable: true, get: function () { return marks_1.MARKS; } });\n__exportStar(require(\"./schemaConstraints\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./nodeTypes\"), exports);\nvar emptyDocument_1 = require(\"./emptyDocument\");\nObject.defineProperty(exports, \"EMPTY_DOCUMENT\", { enumerable: true, get: function () { return emptyDocument_1.EMPTY_DOCUMENT; } });\nvar helpers = __importStar(require(\"./helpers\"));\nexports.helpers = helpers;\nvar schemas_1 = require(\"./schemas\");\nObject.defineProperty(exports, \"getSchemaWithNodeType\", { enumerable: true, get: function () { return schemas_1.getSchemaWithNodeType; } });\n//# sourceMappingURL=index.js.map","import React, { ReactNode } from 'react';\n\nimport { Block, BLOCKS, Document, Inline, INLINES, MARKS, Text } from '@contentful/rich-text-types';\n\nimport { nodeToReactComponent } from './util/nodeListToReactComponents';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.DOCUMENT]: (node, children) => children,\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, children) => <div>{children}</div>,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, children) => <div>{children}</div>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [BLOCKS.TABLE]: (node, children) => (\n    <table>\n      <tbody>{children}</tbody>\n    </table>\n  ),\n  [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <th>{children}</th>,\n  [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node, _children) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, children) => <a href={node.data.uri}>{children}</a>,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => <b>{text}</b>,\n  [MARKS.ITALIC]: (text) => <i>{text}</i>,\n  [MARKS.UNDERLINE]: (text) => <u>{text}</u>,\n  [MARKS.CODE]: (text) => <code>{text}</code>,\n  [MARKS.SUPERSCRIPT]: (text) => <sup>{text}</sup>,\n  [MARKS.SUBSCRIPT]: (text) => <sub>{text}</sub>,\n  [MARKS.STRIKETHROUGH]: (text) => <s>{text}</s>,\n};\n\nfunction defaultInline(type: string, node: Inline): ReactNode {\n  return (\n    <span key={node.data.target.sys.id}>\n      type: {node.nodeType} id: {node.data.target.sys.id}\n    </span>\n  );\n}\n\nfunction defaultInlineResource(type: string, node: Inline) {\n  return (\n    <span key={node.data.target.sys.urn}>\n      type: {node.nodeType} urn: {node.data.target.sys.urn}\n    </span>\n  );\n}\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: Document,\n  options: Options = {},\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    renderText: options.renderText,\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n","/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nexport enum BLOCKS {\n  DOCUMENT = 'document',\n  PARAGRAPH = 'paragraph',\n\n  HEADING_1 = 'heading-1',\n  HEADING_2 = 'heading-2',\n  HEADING_3 = 'heading-3',\n  HEADING_4 = 'heading-4',\n  HEADING_5 = 'heading-5',\n  HEADING_6 = 'heading-6',\n\n  OL_LIST = 'ordered-list',\n  UL_LIST = 'unordered-list',\n  LIST_ITEM = 'list-item',\n\n  HR = 'hr',\n  QUOTE = 'blockquote',\n\n  EMBEDDED_ENTRY = 'embedded-entry-block',\n  EMBEDDED_ASSET = 'embedded-asset-block',\n  EMBEDDED_RESOURCE = 'embedded-resource-block',\n\n  TABLE = 'table',\n  TABLE_ROW = 'table-row',\n  TABLE_CELL = 'table-cell',\n  TABLE_HEADER_CELL = 'table-header-cell',\n}\n","import { BLOCKS } from './blocks';\nimport { Document } from './types';\n\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nexport const EMPTY_DOCUMENT: Document = {\n  nodeType: BLOCKS.DOCUMENT,\n  data: {},\n  content: [\n    {\n      nodeType: BLOCKS.PARAGRAPH,\n      data: {},\n      content: [\n        {\n          nodeType: 'text',\n          value: '',\n          marks: [],\n          data: {},\n        },\n      ],\n    },\n  ],\n};\n","import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { Block, Inline, Node, Text } from './types';\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj: Record<string, unknown>, value: unknown) {\n  for (const key of Object.keys(obj)) {\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the node is an instance of Inline.\n */\nexport function isInline(node: Node): node is Inline {\n  return hasValue(INLINES, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Block.\n */\nexport function isBlock(node: Node): node is Block {\n  return hasValue(BLOCKS, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Text.\n */\nexport function isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n","export { BLOCKS } from './blocks';\nexport { INLINES } from './inlines';\nexport { MARKS } from './marks';\n\nexport * from './schemaConstraints';\n\nexport * from './types';\nexport * from './nodeTypes';\n\nexport { EMPTY_DOCUMENT } from './emptyDocument';\n\nimport * as helpers from './helpers';\nexport { helpers };\n\nexport { getSchemaWithNodeType } from './schemas';\n","/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n *\n * @note This should be kept in alphabetical order since the\n * [validation package](https://github.com/contentful/content-stack/tree/master/packages/validation)\n *  relies on the values being in a predictable order.\n */\nexport enum INLINES {\n  ASSET_HYPERLINK = 'asset-hyperlink',\n  EMBEDDED_ENTRY = 'embedded-entry-inline',\n  EMBEDDED_RESOURCE = 'embedded-resource-inline',\n  ENTRY_HYPERLINK = 'entry-hyperlink',\n  HYPERLINK = 'hyperlink',\n  RESOURCE_HYPERLINK = 'resource-hyperlink',\n}\n","/**\n * Map of all Contentful marks.\n */\nexport enum MARKS {\n  BOLD = 'bold',\n  ITALIC = 'italic',\n  UNDERLINE = 'underline',\n  CODE = 'code',\n  SUPERSCRIPT = 'superscript',\n  SUBSCRIPT = 'subscript',\n  STRIKETHROUGH = 'strikethrough',\n}\n","import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { MARKS } from './marks';\n\nexport type TopLevelBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE\n  | BLOCKS.TABLE;\n\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexport const TOP_LEVEL_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n  BLOCKS.TABLE,\n];\n\nexport type ListItemBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE;\n\n/**\n * Array of all allowed block types inside list items\n */\nexport const LIST_ITEM_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\nexport const TABLE_BLOCKS = [\n  BLOCKS.TABLE,\n  BLOCKS.TABLE_ROW,\n  BLOCKS.TABLE_CELL,\n  BLOCKS.TABLE_HEADER_CELL,\n];\n\n/**\n * Array of all void block types\n */\nexport const VOID_BLOCKS = [\n  BLOCKS.HR,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexport const CONTAINERS = {\n  [BLOCKS.OL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.UL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.LIST_ITEM]: LIST_ITEM_BLOCKS,\n  [BLOCKS.QUOTE]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE]: [BLOCKS.TABLE_ROW],\n  [BLOCKS.TABLE_ROW]: [BLOCKS.TABLE_CELL, BLOCKS.TABLE_HEADER_CELL],\n  [BLOCKS.TABLE_CELL]: [BLOCKS.PARAGRAPH, BLOCKS.UL_LIST, BLOCKS.OL_LIST],\n  [BLOCKS.TABLE_HEADER_CELL]: [BLOCKS.PARAGRAPH],\n};\n\n/**\n * Array of all heading levels\n */\nexport const HEADINGS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n];\n\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexport const TEXT_CONTAINERS = [BLOCKS.PARAGRAPH, ...HEADINGS];\n\n/**\n * Node types before `tables` release.\n */\nexport const V1_NODE_TYPES = [\n  BLOCKS.DOCUMENT,\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.LIST_ITEM,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  INLINES.HYPERLINK,\n  INLINES.ENTRY_HYPERLINK,\n  INLINES.ASSET_HYPERLINK,\n  INLINES.EMBEDDED_ENTRY,\n  'text',\n];\n\n/**\n * Marks before `superscript` & `subscript` release.\n */\nexport const V1_MARKS = [MARKS.BOLD, MARKS.CODE, MARKS.ITALIC, MARKS.UNDERLINE];\n","export declare type PrimitiveType = number | boolean | string | null;\nexport declare type Definition = {\n  $ref?: string;\n  $schema?: string;\n  $id?: string;\n  description?: string;\n  allOf?: Definition[];\n  oneOf?: Definition[];\n  anyOf?: Definition[];\n  title?: string;\n  type?: string | string[];\n  definitions?: {\n    [key: string]: any;\n  };\n  format?: string;\n  items?: Definition | Definition[];\n  minItems?: number;\n  additionalItems?:\n    | {\n        anyOf: Definition[];\n      }\n    | Definition;\n  enum?: PrimitiveType[] | Definition[];\n  default?: PrimitiveType | Record<string, any>;\n  additionalProperties?: Definition | boolean;\n  required?: string[];\n  propertyOrder?: string[];\n  properties?: {\n    [key: string]: any;\n  };\n  defaultProperties?: string[];\n  patternProperties?: {\n    [pattern: string]: Definition;\n  };\n  typeof?: 'function';\n};\n\nexport function getSchemaWithNodeType(nodeType: string): Definition {\n  try {\n    return require(`./generated/${nodeType}.json`);\n  } catch (error) {\n    throw new Error(`Schema for nodeType \"${nodeType}\" was not found.`);\n  }\n}\n"],"names":["BLOCKS","Object","defineProperty","blocks","value","INLINES","inlines","MARKS","marks","_a","__spreadArray","commonjsGlobal","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","exports","V1_MARKS","V1_NODE_TYPES","TEXT_CONTAINERS","HEADINGS","CONTAINERS","VOID_BLOCKS","TABLE_BLOCKS","LIST_ITEM_BLOCKS","TOP_LEVEL_BLOCKS","blocks_1","inlines_1","marks_1","PARAGRAPH","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","OL_LIST","UL_LIST","HR","QUOTE","EMBEDDED_ENTRY","EMBEDDED_ASSET","EMBEDDED_RESOURCE","TABLE","TABLE_ROW","TABLE_CELL","TABLE_HEADER_CELL","LIST_ITEM","DOCUMENT","HYPERLINK","ENTRY_HYPERLINK","ASSET_HYPERLINK","BOLD","CODE","ITALIC","UNDERLINE","types","nodeTypes","emptyDocument","EMPTY_DOCUMENT","blocks_1$1","nodeType","data","content","helpers","isInline","node","hasValue","isBlock","isText","obj","_i","keys","nodeListToReactComponents","nodes","options","map","index","element","nodeToReactComponent","key","React","isValidElement","cloneElement","renderNode","renderMark","renderText","preserveWhitespace","dist","nodeValue","lines_1","replace","match","repeat","split","jsxLines_1","forEach","line","push","createElement","reduce","mark","type","children","Fragment","schemas","getSchemaWithNodeType","commonjsRequire","error","Error","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__exportStar","p","hasOwnProperty","__importStar","mod","result","schemaConstraints","emptyDocument_1","helpers$1","schemas_1","defaultNodeRenderers","defaultInline","RESOURCE_HYPERLINK","defaultInlineResource","_children","href","uri","defaultMarkRenderers","_b","text","SUPERSCRIPT","SUBSCRIPT","STRIKETHROUGH","target","sys","id","urn","richTextDocument","__assign","require"],"sourceRoot":""}